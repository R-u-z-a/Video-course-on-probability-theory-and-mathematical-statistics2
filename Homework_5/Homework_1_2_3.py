# Задача 1
#
# Известно, что генеральная совокупность распределена нормально с известным средним квадратическим отклонением 16.
# Найти ширину доверительного интервала для оценки математического ожидания `mu` с надёжностью 0.95, если выборочное среднее равно 80, а объём выборки равен 256.
#
# Ответ: 3.91992797

# Решение

import numpy as np
from scipy import stats

n = 256
mean = 80
str = 16

p = 0.95
alpha = 1 - p

print(n, mean, str)

# Найдем квантили

t1 = stats.norm.ppf(alpha / 2)
t2 = stats.norm.ppf(1 - alpha / 2)

print(t1, t2)

# Определим доверительный интервал

c = (mean + t1 * str / np.sqrt(n), mean + t2 * str / np.sqrt(n))
print(c)

# Ширина доверительного интервала

print(c[1] - c[0])

# Задача 2
#
# Продавец утверждает, что средний вес пачки печенья составляет 200 г. Из партии извлечена выборка из 10 пачек. Вес каждой пачки составляет:
#
# 202, 203, 199, 197, 195, 201, 200, 204, 194, 190
#
# Известно, что их веса распределены нормально.
# Верно ли утверждение продавца, если учитывать, что уровень значимости равен 1%? Найдите P-значение для данного теста и укажите его в качестве ответа.
#
# Ответ: 0.3145666

# Решение

samples = np.array([202, 203, 199, 197, 195, 201, 200, 204, 194, 190])

n = samples.size
mean = samples.mean()
std = samples.std(ddof=1)

print(n, mean, std)

# Уровень значимости равен $\alpha = 0.01$. Найдем квантили:

alpha = 0.01

t1 = stats.t.ppf(alpha / 2, df=n - 1)
t2 = stats.t.ppf(1 - alpha / 2, df=n - 1)
print(t1, t2)

# Посчитаем значение статистики t на нашей выборке и сделаем заключение

t = (mean - 200) / (std / np.sqrt(n))
print(t)

# Итог: Значение не попало в критическую область

# Теперь найдем P-значение. Для двухсторонней области

p_left = stats.t.cdf(t, df=n - 1)
p_right = 1 - stats.t.cdf(t, df=n - 1)

pvalue = 2 * min(p_left, p_right)

print(p_left, p_right, pvalue)

